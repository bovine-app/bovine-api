---
openapi: 3.0.1
info:
  title: Bovine API V1
  version: v1
paths:
  "/v1/session":
    post:
      summary: Create a new session
      parameters: []
      responses:
        '201':
          description: session created
          content:
            application/json:
              schema:
                type: object
                required:
                - token
                - user
                properties:
                  token:
                    type: string
                  user:
                    "$ref": "#/components/schemas/user"
                    required:
                    - id
                    - email
                    - created_at
                    - updated_at
        '401':
          description: invalid credentials
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - session
    delete:
      summary: Delete the current session
      security:
      - bearer: []
      responses:
        '204':
          description: session deleted
          content: {}
        '401':
          description: unauthorized
          content: {}
  "/v1/sessions":
    get:
      summary: List active sessions for the current user
      security:
      - bearer: []
      responses:
        '200':
          description: active sessions for the current user
          content:
            application/json:
              schema:
                type: object
                required:
                - sessions
                properties:
                  sessions:
                    type: array
                    items:
                      "$ref": "#/components/schemas/session"
  "/v1/sessions/{id}":
    delete:
      summary: Delete a session
      security:
      - bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: session deleted
          content: {}
        '401':
          description: unauthorized
          content: {}
        '404':
          description: invalid session ID
          content: {}
        '422':
          description: cannot delete current session
          content: {}
  "/v1/user":
    post:
      summary: Create a new user
      parameters: []
      responses:
        '201':
          description: user created
          content:
            application/json:
              schema:
                type: object
                required:
                - token
                - user
                properties:
                  token:
                    type: string
                  user:
                    "$ref": "#/components/schemas/user"
                    required:
                    - id
                    - email
                    - created_at
                    - updated_at
        '400':
          description: missing parameters
          content:
            application/json:
              schema:
                type: object
                required:
                - message
                - parameter
                properties:
                  message:
                    type: string
                  parameter:
                    type: string
        '422':
          description: validation falied
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/validationErrors"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  "$ref": "#/components/schemas/user"
                  required:
                  - email
                  - password
                  - password_confirmation
              required:
              - user
    get:
      summary: Get the current user
      security:
      - bearer: []
      responses:
        '200':
          description: current user
          content:
            application/json:
              schema:
                type: object
                required:
                - user
                properties:
                  user:
                    "$ref": "#/components/schemas/user"
        '401':
          description: unauthorized
          content: {}
    put:
      summary: Update the current user
      security:
      - bearer: []
      parameters: []
      responses:
        '200':
          description: user updated
          content:
            application/json:
              schema:
                type: object
                required:
                - user
                properties:
                  user:
                    "$ref": "#/components/schemas/user"
                    required:
                    - id
                    - email
                    - created_at
                    - updated_at
        '400':
          description: missing parameters
          content:
            application/json:
              schema:
                type: object
                required:
                - message
                - parameter
                properties:
                  message:
                    type: string
                  parameter:
                    type: string
        '401':
          description: unauthorized
          content: {}
        '403':
          description: forbidden
          content: {}
        '422':
          description: validation falied
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/validationErrors"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  "$ref": "#/components/schemas/user"
                  required:
                  - email
                  - password
                  - password_confirmation
                current_password:
                  type: string
              required:
              - user
              - current_password
    delete:
      summary: Delete the current user
      security:
      - bearer: []
      parameters: []
      responses:
        '204':
          description: user deleted
          content: {}
        '400':
          description: missing parameters
          content: {}
        '401':
          description: unauthorized
          content: {}
        '403':
          description: forbidden
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
              required:
              - current_password
components:
  schemas:
    session:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
        updated_at:
          type: string
          readOnly: true
        user_id:
          type: string
          readOnly: true
        user_agent:
          type: string
          readOnly: true
        created_from:
          type: string
          readOnly: true
        last_accessed_from:
          type: string
          readOnly: true
        last_accessed_at:
          type: string
          readOnly: true
        expires_at:
          type: string
          readOnly: true
    user:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created_at:
          type: string
          readOnly: true
        updated_at:
          type: string
          readOnly: true
        email:
          type: string
        password:
          type: string
          writeOnly: true
        password_confirmation:
          type: string
          writeOnly: true
    validationErrors:
      type: object
      required:
      - message
      - errors
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                  required:
                  - error
            required:
            - field
            - details
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
